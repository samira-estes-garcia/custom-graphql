{"version":3,"sources":["graphql/get-info.js","containers/Container.js","App.js","reportWebVitals.js","index.js"],"names":["GET_INFO","gql","Container","useQuery","data","posts","className","map","JSON","stringify","App","client","ApolloClient","uri","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kOAEaA,E,MAAWC,GAAH,4I,QCERC,EAAY,WAAO,IAAD,EACWC,mBAASH,GAAvCI,KADmB,gBACI,GADJ,GACXC,aADW,MACH,GADG,EAG3B,OACI,qBAAKC,UAAU,YAAf,SACKD,GAASA,EAAME,KAAI,SAAAF,GAAK,OAAIG,KAAKC,UAAUJ,SCWzCK,MAff,WAEE,IAAMC,EAAS,IAAIC,IAAa,CAC9BC,IAAK,oDAGP,OACE,cAAC,iBAAD,CAAgBF,OAAQA,EAAxB,SACE,+BACE,cAAC,EAAD,SCFOG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a3e8613a.chunk.js","sourcesContent":["import gql from 'graphql-tag';\n\nexport const GET_INFO = gql`\n{\n    posts {\n      title\n      description\n      author {\n        name\n        age\n      }\n    }\n  }\n`","import React from 'react';\nimport { useQuery } from '@apollo/client';\nimport { GET_INFO } from '../graphql/get-info'\n\nexport const Container = () => {\n    const { data: { posts = [] } = {} } = useQuery(GET_INFO);\n\n    return (\n        <div className=\"container\">\n            {posts && posts.map(posts => JSON.stringify(posts))}\n        </div>\n    )\n}","import React from 'react'\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from '@apollo/client'\nimport { Container } from './containers/Container'\n\nfunction App() {\n\n  const client = new ApolloClient({\n    uri: 'https://damp-stream-49299.herokuapp.com/graphql'\n  });\n\n  return (\n    <ApolloProvider client={client}>\n      <main>\n        <Container />\n      </main>\n    </ApolloProvider>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}